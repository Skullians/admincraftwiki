name: Cloudflare Pages Preview Deployment

on:
    pull_request_target:
      types: [opened, synchronize, reopened]
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Preview
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Debug Directory
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Lock file contents (if exists):"
          cat pnpm-lock.yaml || echo "Lock file not found"

      - name: Install Dependencies
        run: |
          echo "Using pnpm version:"
          pnpm --version
          pnpm install --no-frozen-lockfile

      - name: Build Next.js App
        run: pnpm build
        env:
          NEXT_TELEMETRY_DISABLED: 1
          NODE_ENV: production
          NEXT_WEBPACK_BUFFER_SIZE: 512000

      - name: Install Wrangler
        run: pnpm add -D wrangler@latest
        
      - name: Deploy to Cloudflare Pages
        run: |
          export CLOUDFLARE_API_TOKEN="${{ secrets.CLOUDFLARE_API_TOKEN }}"
          export CLOUDFLARE_ACCOUNT_ID="${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          npx wrangler pages deploy .next --project-name=admincraftwiki --branch=${{ github.head_ref }} --commit-dirty=true
          
      - name: Get Preview URL
        id: preview-url
        run: |
          PREVIEW_URL="https://${GITHUB_HEAD_REF//\//-}.admincraftwiki.pages.dev"
          echo "url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          
      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = '${{ steps.preview-url.outputs.url }}';
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: `âœ¨ Preview deployment is ready!\n\n${previewUrl}`
            });