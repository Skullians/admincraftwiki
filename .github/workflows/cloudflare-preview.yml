name: Cloudflare Pages Preview Deployment

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  deployments: write
  pull-requests: write
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Preview
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    
    steps:
      # First checkout the base branch
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          
      # Then checkout the PR branch
      - name: Checkout PR
        run: |
          git remote add fork ${{ github.event.pull_request.head.repo.clone_url }}
          git fetch fork ${{ github.event.pull_request.head.ref }}
          git checkout -b pr-${{ github.event.pull_request.number }} fork/${{ github.event.pull_request.head.ref }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Next.js App
        run: pnpm build
        env:
          NEXT_TELEMETRY_DISABLED: 1
          NODE_ENV: production

      - name: Deploy to Cloudflare Pages
        run: |
          pnpm add -D wrangler@latest
          BRANCH_NAME=pr-${{ github.event.pull_request.number }}
          npx wrangler pages deploy .next \
            --project-name=admincraftwiki \
            --branch="$BRANCH_NAME" \
            --commit-dirty=true
          echo "PREVIEW_URL=https://$BRANCH_NAME.admincraftwiki.pages.dev" >> $GITHUB_ENV

      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: `âœ¨ Preview deployment is ready!\n\n${process.env.PREVIEW_URL}`
            });